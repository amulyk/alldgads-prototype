{"ast":null,"code":"// Core\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { loader } from 'graphql.macro'; // Types\n\n// Queries\nconst queryAccounts = loader('./gql/queryAccounts.graphql');\nexport const useQueryAccounts = () => {\n  const [getUsers, {\n    loading,\n    error,\n    data\n  }] = useLazyQuery(queryAccounts, {\n    fetchPolicy: 'network-only'\n  });\n  return {\n    getUsers,\n    loading,\n    error,\n    data: data && data\n  };\n};","map":{"version":3,"sources":["/Users/amulyk/Desktop/projects/alldgads-prototype/src/bus/user/hooks/useQueryAccounts/index.ts"],"names":["useLazyQuery","loader","queryAccounts","useQueryAccounts","getUsers","loading","error","data","fetchPolicy"],"mappings":"AAAA;AAEA,SAASA,YAAT,QAA6B,qBAA7B;AACA,SAASC,MAAT,QAAuB,eAAvB,C,CAEA;;AAGA;AACA,MAAMC,aAAa,GAAGD,MAAM,CAAC,6BAAD,CAA5B;AASA,OAAO,MAAME,gBAAgB,GAAG,MAA4B;AAC1D,QAAM,CACJC,QADI,EAEJ;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAFI,IAGFP,YAAY,CAAoBE,aAApB,EAAmC;AAAEM,IAAAA,WAAW,EAAE;AAAf,GAAnC,CAHhB;AAKA,SAAO;AACLJ,IAAAA,QADK;AAELC,IAAAA,OAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA,IAAI,EAAEA,IAAI,IAAIA;AAJT,GAAP;AAMD,CAZM","sourcesContent":["// Core\nimport { ApolloError } from 'apollo-boost';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { loader } from 'graphql.macro';\n\n// Types\nimport { userQueryAccounts } from './gql/__generated__/userQueryAccounts';\n\n// Queries\nconst queryAccounts = loader('./gql/queryAccounts.graphql');\n\ntype UseQueryAccountsType = {\n  loading: boolean;\n  data?: userQueryAccounts;\n  error?: ApolloError;\n  getUsers: () => void;\n}\n\nexport const useQueryAccounts = (): UseQueryAccountsType => {\n  const [\n    getUsers,\n    { loading, error, data },\n  ] = useLazyQuery<userQueryAccounts>(queryAccounts, { fetchPolicy: 'network-only' });\n\n  return {\n    getUsers,\n    loading,\n    error,\n    data: data && data,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}