{"ast":null,"code":"var _jsxFileName = \"/Users/amulyk/Desktop/projects/alldgads-prototype/src/bus/user/Users.tsx\";\nvar __jsx = React.createElement;\n// Core\nimport React from 'react'; // Hooks\n\nimport { useQueryAccounts } from './hooks/useQueryAccounts';\nexport const Users = () => {\n  const {\n    loading,\n    data,\n    error,\n    getUsers\n  } = useQueryAccounts();\n\n  const load = () => {\n    getUsers();\n  };\n\n  const loaderJSX = loading && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Loading...\");\n\n  const errorJSX = error && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Error!\", error.message);\n\n  const usersJSX = !loading && !error && data && data.users.map((user, id) => {\n    const name = user && user.name;\n    const email = user && user.email;\n    const password = user && user.password;\n\n    const passwordJSX = password && __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", password);\n\n    return __jsx(\"div\", {\n      key: String(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u0418\\u043C\\u044F:\", name), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Email:\", email), passwordJSX);\n  });\n  return __jsx(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    onClick: load,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435\\u0445 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"), loaderJSX, errorJSX), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, usersJSX));\n};","map":{"version":3,"sources":["/Users/amulyk/Desktop/projects/alldgads-prototype/src/bus/user/Users.tsx"],"names":["React","useQueryAccounts","Users","loading","data","error","getUsers","load","loaderJSX","errorJSX","message","usersJSX","users","map","user","id","name","email","password","passwordJSX","String"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAwC,OAAxC,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AAEA,OAAO,MAAMC,KAAS,GAAG,MAAoB;AAC3C,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFL,gBAAgB,EALpB;;AAOA,QAAMM,IAAI,GAAG,MAAY;AACvBD,IAAAA,QAAQ;AACT,GAFD;;AAIA,QAAME,SAAS,GAAGL,OAAO,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;;AAIA,QAAMM,QAAQ,GAAGJ,KAAK,IACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEIA,KAAK,CAACK,OAFV,CADF;;AAOA,QAAMC,QAAQ,GAAG,CAACR,OAAD,IAAY,CAACE,KAAb,IAAsBD,IAAtB,IAA8BA,IAAI,CAACQ,KAAL,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,EAAP,KAAc;AAC1E,UAAMC,IAAI,GAAGF,IAAI,IAAIA,IAAI,CAACE,IAA1B;AACA,UAAMC,KAAK,GAAGH,IAAI,IAAIA,IAAI,CAACG,KAA3B;AACA,UAAMC,QAAQ,GAAGJ,IAAI,IAAIA,IAAI,CAACI,QAA9B;;AACA,UAAMC,WAAW,GAAGD,QAAQ,IAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAEGA,QAFH,CADF;;AAOA,WACE;AAAK,MAAA,GAAG,EAAEE,MAAM,CAACL,EAAD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEGC,IAFH,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEGC,KAFH,CALF,EASGE,WATH,CADF;AAaD,GAxB8C,CAA/C;AA0BA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEZ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sKADF,EAEGC,SAFH,EAGGC,QAHH,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QADH,CAPF,CADF;AAaD,CA9DM","sourcesContent":["// Core\nimport React, { FC, ReactElement } from 'react';\n\n// Hooks\nimport { useQueryAccounts } from './hooks/useQueryAccounts';\n\nexport const Users: FC = (): ReactElement => {\n  const {\n    loading,\n    data,\n    error,\n    getUsers,\n  } = useQueryAccounts();\n\n  const load = (): void => {\n    getUsers();\n  };\n\n  const loaderJSX = loading && (\n    <p>Loading...</p>\n  );\n\n  const errorJSX = error && (\n    <p>\n      Error!\n      { error.message }\n    </p>\n  );\n\n  const usersJSX = !loading && !error && data && data.users.map((user, id) => {\n    const name = user && user.name;\n    const email = user && user.email;\n    const password = user && user.password;\n    const passwordJSX = password && (\n      <p>\n        Пароль:\n        {password}\n      </p>\n    );\n\n    return (\n      <div key={String(id)}>\n        <p>\n          Имя:\n          {name}\n        </p>\n        <p>\n          Email:\n          {email}\n        </p>\n        {passwordJSX}\n      </div>\n    );\n  });\n\n  return (\n    <section>\n      <h1>Пользователи</h1>\n      <div>\n        <button type=\"submit\" onClick={load}>Загрузить всех пользователей</button>\n        {loaderJSX}\n        {errorJSX}\n      </div>\n      <div>\n        {usersJSX}\n      </div>\n    </section>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}